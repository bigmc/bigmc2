<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.bigraph.bigmc</groupId>
  <artifactId>bigmc2</artifactId>
  <version>2.0.0</version>
  <packaging>jar</packaging>

  <name>bigmc2</name>
  <url>http://www.bigraph.org/bigmc</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <encoding>UTF-8</encoding>
  </properties>

  <repositories>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>
<repository>
   <id>oss.sonatype.org</id> 
   <name>releases</name> 
   <url>http://oss.sonatype.org/content/repositories/releases</url> 
 </repository>
 
 <repository>
   <id>central</id> 
   <name>Maven repository</name> 
   <url>http://repo1.maven.org/maven2</url> 
 </repository>
 
  <repository>
   <id>ObjectWeb</id> 
   <name>ObjectWeb repository</name> 
   <url>http://maven.ow2.org/maven2</url> 
 </repository>
	
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.9.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
	<dependency>
            <groupId>org.specs2</groupId> 
            <artifactId>specs2_2.9.1</artifactId> 
            <version>1.9</version> 
	    <scope>test</scope> 
	</dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
		<version>2.15.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
	            <argLine>-Dfile.encoding=UTF-8</argLine>
                    <sourceDir>src/main/scala</sourceDir>
		    <encoding>UTF-8</encoding>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                        <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
			<jvmArg>-encoding UTF-8</jvmArg>
                    </jvmArgs>
	            <argLine>-Dfile.encoding=UTF-8 -encoding UTF-8</argLine>
                </configuration>
            </plugin>
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7.2</version>
        <executions>
          <!-- The default-test execution that is included by default
          will test the java code. The scala-test execution runs only
          the scala tests. -->
          <execution>
            <id>scala-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
	      <encoding>UTF-8</encoding>
              <!-- Directory for scala tests -->
              <testSourceDirectory>src/test/scala</testSourceDirectory>
              <!-- The sorts of classes to consider as tests.
              Using a pattern ending in .scala doesn't work even though
              the maven-surefile-plugin doc indicates is should! -->
              <includes>
                <include>**/*Spec.class</include>
               </includes>
                <encoding>UTF-8</encoding>
                <inputEncoding>UTF-8</inputEncoding>
                <outputEncoding>UTF-8</outputEncoding>
              
              <jvmArgs>
                  <jvmArg>-Xms64m</jvmArg>
                  <jvmArg>-Xmx1024m</jvmArg>
                  <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
		  <jvmArg>-encoding UTF-8</jvmArg>
              </jvmArgs>
	      <argLine>-Dfile.encoding=UTF-8 -encoding UTF-8</argLine>
            </configuration>
          </execution>
        </executions>
      </plugin>  
	</plugins>
    </build>
  
</project>
